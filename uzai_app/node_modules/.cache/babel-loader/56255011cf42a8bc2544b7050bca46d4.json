{"remainingRequest":"D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\src\\components\\xz\\Login.vue","mtime":1567392502509},{"path":"D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\oksana\\14_MINTUI\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      uname: \"\",\n      //用户名\n      upwd: \"\" //密码\n\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      // 功能一：完成用户登录操作\n      // 1：获取用户名和密码\n      var u = this.uname;\n      var p = this.upwd;\n      console.log(u, p); // 2: 创建正则表达式 3~12位置 字母数字\n\n      var reg = /^[a-z0-9]{3,12}$/i; //var regupwd=/^[a-z0-9]{8}$/;\n      // 3: 判断如何错误 用户名提示\n\n      if (!reg.test(u)) {\n        // this.$messagebox(\"消息\",\"用户名格式不正确\");\n        this.$toast(\"用户名格式不正确\");\n        return;\n      } // 4: 判断如何错误 密码提示\n\n\n      if (!reg.test(p)) {\n        // this.$messagebox(\"消息\",\"密码格式不正确\");\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // 5: 发送ajax\n\n\n      var url = \"login\";\n      var obj = {\n        uname: u,\n        upwd: p\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        console.log(res.data.code); // 6: 接收服务器返回数据\n\n        var code = res.data.code; // 7: 失败 提示\n\n        if (code == -1) {\n          _this.$messagebox(\"消息\", \"用户名或密码不正确\"); // 8: 成功 跳转\n\n        } else {\n          _this.$router.push(\"/product\");\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAmBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,aAAA,EADA;AACA;AACA,YAAA,EAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,IAAA,KAAA,KAAA;AACA,UAAA,IAAA,KAAA,IAAA;AACA,cAAA,GAAA,CAAA,CAAA,EAAA,CAAA,EALA,CAMA;;AACA,UAAA,MAAA,mBAAA,CAPA,CAQA;AACA;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,MAAA,CAAA,UAAA;AACA;AACA,OAdA,CAeA;;;AACA,UAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA;AACA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OApBA,CAqBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,eAAA,CAAA;AAAA,cAAA;AAAA,OAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA,gBAAA,GAAA,CAAA,IAAA,IAAA,CAAA,IAAA,EADA,CAEA;;AACA,YAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CAHA,CAIA;;AACA,YAAA,QAAA,CAAA,CAAA,EAAA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,WAAA,EADA,CAEA;;AACA,SAHA,MAGA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA,OAXA;AAYA;AArCA;AAPA,CAAA","sourcesContent":["<!--Login.vue 用户登录组件-->\r\n<template>\r\n  <div>\r\n    <!-- <h1>Login.vue</h1> -->\r\n    <!--用户名输入框-->\r\n    <mt-field label=\"用户名\" placeholder=\"请输入用户名\" :attr=\"{maxlength:12}\" v-model=\"uname\"></mt-field>\r\n    <!--用户密码输入框-->\r\n    <mt-field\r\n      label=\"用户密码\"\r\n      placeholder=\"请输入用户密码\"\r\n      :attr=\"{maxlenght:8}\"\r\n      v-model=\"upwd\"\r\n      type=\"password\"\r\n    ></mt-field>\r\n    <!--登录按钮 绑定事件-->\r\n    <mt-button @click=\"login\" size=\"large\">登录</mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      uname: \"\", //用户名\r\n      upwd: \"\" //密码\r\n    };\r\n  },\r\n  methods: {\r\n    login() {\r\n      // 功能一：完成用户登录操作\r\n      // 1：获取用户名和密码\r\n      var u = this.uname;\r\n      var p = this.upwd;\r\n      console.log(u, p);\r\n      // 2: 创建正则表达式 3~12位置 字母数字\r\n      var reg = /^[a-z0-9]{3,12}$/i;\r\n      //var regupwd=/^[a-z0-9]{8}$/;\r\n      // 3: 判断如何错误 用户名提示\r\n      if (!reg.test(u)) {\r\n        // this.$messagebox(\"消息\",\"用户名格式不正确\");\r\n        this.$toast(\"用户名格式不正确\");\r\n        return;\r\n      }\r\n      // 4: 判断如何错误 密码提示\r\n      if (!reg.test(p)) {\r\n        // this.$messagebox(\"消息\",\"密码格式不正确\");\r\n        this.$toast(\"密码格式不正确\");\r\n        return;\r\n      }\r\n      // 5: 发送ajax\r\n      var url = \"login\";\r\n      var obj = { uname: u, upwd: p };\r\n      this.axios.get(url, { params: obj }).then(res => {\r\n        console.log(res.data.code);\r\n        // 6: 接收服务器返回数据\r\n        var code = res.data.code;\r\n        // 7: 失败 提示\r\n        if (code == -1) {\r\n          this.$messagebox(\"消息\", \"用户名或密码不正确\");\r\n          // 8: 成功 跳转\r\n        } else {\r\n          this.$router.push(\"/product\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src\\components\\xz"}]}